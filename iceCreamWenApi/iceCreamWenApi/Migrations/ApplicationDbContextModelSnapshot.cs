// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using iceCreamWenApi.Models;

#nullable disable

namespace iceCreamWenApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("iceCreamWenApi.Models.AdminLogin", b =>
                {
                    b.Property<Guid>("adminid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("adminemail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adminpassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("adminid");

                    b.ToTable("adminLogins");
                });

            modelBuilder.Entity("iceCreamWenApi.Models.Book", b =>
                {
                    b.Property<int>("bookid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("bookid"), 1L, 1);

                    b.Property<string>("author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("bookImageData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("bookImgaeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bookName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<string>("rating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("bookid");

                    b.ToTable("books");
                });

            modelBuilder.Entity("iceCreamWenApi.Models.Order", b =>
                {
                    b.Property<int>("orderid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("orderid"), 1L, 1);

                    b.Property<string>("custome_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("customer_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("order_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("order_Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("products")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shipping_Adddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("total_Amount")
                        .HasColumnType("bigint");

                    b.HasKey("orderid");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("iceCreamWenApi.Models.Recipe", b =>
                {
                    b.Property<int>("recipeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("recipeid"), 1L, 1);

                    b.Property<string>("authorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("authorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("calories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cookingTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("fileData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("fileDataBannerImage")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("fileDataFlavourImage")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("flavorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ingredients")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("instructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("recipeBannerImageFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("recipeFlavourImageFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("recipeImageFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("recipeid");

                    b.ToTable("recipes");
                });

            modelBuilder.Entity("iceCreamWenApi.Models.RecipeWinner", b =>
                {
                    b.Property<int>("winnerRecipeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("winnerRecipeid"), 1L, 1);

                    b.Property<int>("author_ID")
                        .HasColumnType("int");

                    b.Property<string>("author_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("calories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cooking_Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ingredients")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("instructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("recipe_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userRecipeImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("winnerRecipeid");

                    b.ToTable("recipeWinners");
                });

            modelBuilder.Entity("iceCreamWenApi.Models.User", b =>
                {
                    b.Property<int>("userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userid"), 1L, 1);

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userid");

                    b.ToTable("users");
                });

            modelBuilder.Entity("iceCreamWenApi.Models.UserRecipe", b =>
                {
                    b.Property<int>("userRecipeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userRecipeid"), 1L, 1);

                    b.Property<int>("author_ID")
                        .HasColumnType("int");

                    b.Property<string>("author_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("calories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cooking_Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ingredients")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("instructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("recipe_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userRecipeImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userRecipeid");

                    b.ToTable("userRecipes");
                });

            modelBuilder.Entity("iceCreamWenApi.Models.Varieties", b =>
                {
                    b.Property<int>("VarietyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VarietyID"), 1L, 1);

                    b.Property<int>("RecipeID")
                        .HasColumnType("int");

                    b.Property<string>("VarietyImageFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cashOnDelivery")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deliveryTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<byte[]>("varietyImg")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("varietyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VarietyID");

                    b.HasIndex("RecipeID");

                    b.ToTable("varieties");
                });

            modelBuilder.Entity("iceCreamWenApi.Models.Varieties", b =>
                {
                    b.HasOne("iceCreamWenApi.Models.Recipe", "Recipe")
                        .WithMany("Varieties")
                        .HasForeignKey("RecipeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("iceCreamWenApi.Models.Recipe", b =>
                {
                    b.Navigation("Varieties");
                });
#pragma warning restore 612, 618
        }
    }
}
